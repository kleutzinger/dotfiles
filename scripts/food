#!/usr/bin/env -S uv run --script --with click,requests

"""
usage:

submit a food:
    ./food thing i ate

get today's food:
    ./food

example response:
    Food Journal
    2025-01-07 12:51 chicken thigh
    2025-01-07 12:55 more chicken thigh
"""

import requests
import click
import subprocess

ENDPOINT = "http://127.0.0.1:37840/custom/food"


def ul_li_to_nice(htmlstr: str):
    "convert html list to plain text"
    import re

    # Remove ul tags and their content
    htmlstr = re.sub(r"<ul[^>]*>", "", htmlstr)
    htmlstr = re.sub(r"</ul>", "", htmlstr)

    # Find all li tags and extract their content
    li_pattern = r"<li[^>]*>(.*?)</li>"
    matches = re.findall(li_pattern, htmlstr, re.DOTALL)

    out = ""
    for i, match in enumerate(matches):
        # Clean up the content: remove extra whitespace and newlines
        content = match.strip()
        # Remove any remaining HTML tags
        content = re.sub(r"<[^>]+>", "", content)
        if content:
            # Skip the first line if it's just "Food Journal" or "Journal"
            if i == 0 and content.lower() in ["food journal", "journal"]:
                continue
            out += content + "\n"

    return out


def trim_line(text: str):
    "for each line remove everything before first space including the space"
    return "\n".join([line[line.find(" ") + 1 :] for line in text.split("\n")])


@click.command()
@click.option("--notification", "-n", is_flag=True, help="send a notification after")
@click.option("--list", "-l", is_flag=True, help="list all food")
@click.argument("food", required=False, nargs=-1)
def main(notification, list, food):
    if food is None or list:
        response = requests.get(ENDPOINT)
    else:
        food = " ".join(food)
        response = requests.post(ENDPOINT, data={"food": food})
    output = ul_li_to_nice(response.text)
    output = trim_line(output)
    if notification:
        subprocess.run(["notify-send", "Food Journal", output])
    print(output)


main()
